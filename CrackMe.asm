.model tiny       
.286              
.code             
org 100h  
; 1) какую лучше постараться сделать увезвимость  -> подобрать хэш то есть два пароля дают один и тот же хэ
; 2) что можно сделать пока друг еще пишет прогу 
; 3) как должна выглядеть 1 задание. я взламываю прям через консоль 
; 4) во втором задание надо просто переписать прогу так чтобы она принимала любой пароль или что ?
; 

; узнать про флаг переполнения (перезапис стека, перезапис сегмента)
; таблетка 
; диссасм (добавь комментрарии, )
; написать readme

; перенаправление в другой файл 
;


; сделать таблетку -> то есть перезаписывать .com 
Start: 
                ; считываем хэш пароля
                mov  si, offset password 
                call elf_hash               ; функция которая считает хеш пароля 
                mov  true_hash, ax      

                ; выводим предложение вести пароль
                mov dx, offset invitation  
                mov ah, 09h
                int 21h

                ; считываем пароль
                mov  si, offset user_buffer
                call enter_password          

                ; вычисляем хэш введенного пароля 
                mov  si, offset user_buffer
                call elf_hash

                ; сравниваем хеши 
                cmp ax, true_hash
                jne fail_case

success_case:
                mov dx, offset success_msg
                mov ah, 09h
                int 21h
                jmp end_case

fail_case:
                mov dx, offset fail_msg
                mov ah, 09h
                int 21h

end_case:
                mov ax, 4c00h
                int 21h
;-----------------------------------------------------

;====================================================================
; Функция для ввода пароля 
;====================================================================
enter_password proc
               push bp
               mov  bp, sp
               xor  cx, cx

@@while1:
               mov ah, 01h ; 07h
               int 21h
               cmp al, 0dh
               je @@end_while

               mov [si],al
               inc  si
               inc  cx
               jmp @@while1

@@end_while:
               mov byte ptr [si], 0
               pop bp
               ret

enter_password endp

;====================================================================
; Функция для вычисления хэша (ElfHash)
;====================================================================
elf_hash       proc
               push bp
               mov  bp, sp
               xor  ax, ax                          ; обнуляем ax (здесь будет храниться хэш)
               xor  bx, bx                          ; обнуляем bx (временный регистр)

@@for_start: 
               mov bl, [si]                        ; загружаем символ из буфера в bl
               cmp bl, 0                           ; проверяем, достигнут ли конец строки
               je @@end_for                        ; если да, завершаем цикл

               ; Алгоритм elfhash
               shl ax, 4                           ; сдвигаем хэш на 4 бита влево
               add ax, bx                          ; добавляем ASCII-код символа к хэшу
               mov bx, ax                          ; копируем хэш в bx
               and bx, 0F000h                      ; выделяем старшие 4 бита
               shr bx, 24                          ; сдвигаем их на 24 бита вправо
               xor ax, bx                          ; xor с хэшем
               and ax, 0FFFFh                      ; оставляем только младшие 16 бит

               inc si                              ; переходим к следующему символу
               jmp @@for_start                     ; повторяем цикл

@@end_for:
               pop bp
               ret                                 ; возвращаемся из функции
elf_hash       endp

;=====================================================================================================
;                                    CONSTANTS
;=====================================================================================================
invitation  db 'Enter your password: $' 
success_msg db 'Success :)', '$'        
fail_msg    db 'Fail', '$'              
true_hash   dw 0                        

password  db 'hello', 0           ; TODO как-то спрятать пароль       
user_buffer db 5 dup(0)                  

;-----------------------------------------------------------------------

end start